"use strict";(self.webpackChunk_carlospence_synccomponents_test=self.webpackChunk_carlospence_synccomponents_test||[]).push([[761],{"./src/components/MultiStateButton/MultiStateButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledChangeState:()=>ControlledChangeState,ExternalChangeState:()=>ExternalChangeState,ExternalControlledChangeState:()=>ExternalControlledChangeState,ExternalControlledInvisibleButon:()=>ExternalControlledInvisibleButon,LoopingButton:()=>LoopingButton,NoLoopingButton:()=>NoLoopingButton,RoundButton:()=>RoundButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MultiStateButton_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const isMultiStateButtonOption=obj=>!(!obj.iconOrText||!obj.value);function isEmpty(obj){if(null===obj)return!0;if(void 0===obj)return!0;if(obj.length>0)return!1;if(0===obj.length)return!0;if("object"!=typeof obj)return!0;for(var prop in obj)if(obj.hasOwnProperty(prop))return!1;return JSON.stringify(obj)===JSON.stringify({})}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const StyledMultiStateButton=styled_components_browser_esm.ZP.button`
  border: 0;
  font-size: 15px;
  cursor: pointer;
  font-weight: 700;
  font-weight: bold;
  border-radius: 3px;
  display: inline-block;
  
  ${_ref=>{let{round,size}=_ref;if(round)switch(size){case"small":return styled_components_browser_esm.iv`
          height: 24px;
          width: 24px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
        `;case"medium":return styled_components_browser_esm.iv`
          height: 48px;
          width: 48px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
        `;case"large":return styled_components_browser_esm.iv`
          height: 56px;
          width: 56px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
        `;default:return styled_components_browser_esm.iv`
          height: 32px;
          width: 32px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          
        `}}}
  ${_ref2=>{let{visible}=_ref2;return void 0===visible||!0===visible?styled_components_browser_esm.iv`
      
    `:!1===visible?styled_components_browser_esm.iv`
      display: none !important;
    `:void 0}}
 
`,MultiStateButton_MultiStateButton=react.forwardRef(((_ref3,ref)=>{let{size,disabled,options={},selectedOption={},defaultOptionKey="",loop=!0,readonly=!1,onChange,...props}=_ref3;const[currentState,setCurrentState]=(0,react.useState)((()=>function isNonEmptyString(str){return!!str&&str.length>0}(defaultOptionKey)?defaultOptionKey:Object.keys(options)[0])),[currentOption,setCurrentOption]=(0,react.useState)((()=>!isEmpty(selectedOption)&&isMultiStateButtonOption(selectedOption)?selectedOption:Object.keys(options).length>0?options[currentState]:null));(0,react.useEffect)((()=>{isEmpty(selectedOption)||isMultiStateButtonOption(selectedOption)&&setCurrentOption(selectedOption)}),[selectedOption]);const changeState=()=>{var keys=Object.keys(options);if(keys.length>0){let currentIndex=keys.indexOf(currentState);isEmpty(selectedOption)||isMultiStateButtonOption(selectedOption)&&void 0!==selectedOption?.value&&(currentIndex=keys.indexOf(selectedOption?.value));let nextIndex=currentIndex;currentIndex<keys.length-1?nextIndex=currentIndex+1:loop&&(nextIndex=0);var nextState=keys[nextIndex];let nextOption=options[nextState];return onChange&&onChange(nextState,nextOption),isEmpty(selectedOption)&&(setCurrentOption(nextOption),setCurrentState(nextState)),nextOption}};return react.useImperativeHandle(ref,(()=>({toggle(){var result=changeState();return null!=result?result:currentOption}}))),(0,jsx_runtime.jsx)(StyledMultiStateButton,{onClick:()=>{readonly||changeState()},disabled,style:!isEmpty(selectedOption)&&isMultiStateButtonOption(selectedOption)?selectedOption.style:currentOption?.style,size,...props,className:`${props.className} ${!isEmpty(selectedOption)&&isMultiStateButtonOption(selectedOption)?selectedOption.class:currentOption?.class}`,children:!isEmpty(selectedOption)&&isMultiStateButtonOption(selectedOption)?selectedOption.iconOrText:options[currentState].iconOrText})}));try{MultiStateButton.displayName="MultiStateButton",MultiStateButton.__docgenInfo={description:"",displayName:"MultiStateButton",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},options:{defaultValue:{value:"{}"},description:"",name:"options",required:!1,type:{name:"MultiStateButtonOptions"}},defaultOptionKey:{defaultValue:{value:""},description:"",name:"defaultOptionKey",required:!1,type:{name:"string"}},selectedOption:{defaultValue:{value:"{}"},description:"",name:"selectedOption",required:!1,type:{name:"MultiStateButtonOption"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((newState: string, newOption: MultiStateButtonOption) => MultiStateButtonOption | null)"}},round:{defaultValue:null,description:"",name:"round",required:!1,type:{name:"boolean"}},loop:{defaultValue:{value:"true"},description:"",name:"loop",required:!1,type:{name:"boolean"}},readonly:{defaultValue:{value:"false"},description:"",name:"readonly",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MultiStateButton/MultiStateButton.tsx#MultiStateButton"]={docgenInfo:MultiStateButton.__docgenInfo,name:"MultiStateButton",path:"src/components/MultiStateButton/MultiStateButton.tsx#MultiStateButton"})}catch(__react_docgen_typescript_loader_error){}var fontawesome_svg_core=__webpack_require__("./node_modules/@fortawesome/fontawesome-svg-core/index.mjs"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function camelize(string){return function _isNumerical(obj){return(obj-=0)==obj}(string)?string:(string=string.replace(/[\-_\s]+(.)?/g,(function(match,chr){return chr?chr.toUpperCase():""}))).substr(0,1).toLowerCase()+string.substr(1)}var _excluded=["style"];var PRODUCTION=!1;try{PRODUCTION=!0}catch(e){}function normalizeIconArgs(icon){return icon&&"object"===_typeof(icon)&&icon.prefix&&icon.iconName&&icon.icon?icon:fontawesome_svg_core.Qc.icon?fontawesome_svg_core.Qc.icon(icon):null===icon?null:icon&&"object"===_typeof(icon)&&icon.prefix&&icon.iconName?icon:Array.isArray(icon)&&2===icon.length?{prefix:icon[0],iconName:icon[1]}:"string"==typeof icon?{prefix:"fas",iconName:icon}:void 0}function objectWithKey(key,value){return Array.isArray(value)&&value.length>0||!Array.isArray(value)&&value?_defineProperty({},key,value):{}}var FontAwesomeIcon=react.forwardRef((function(props,ref){var iconArgs=props.icon,maskArgs=props.mask,symbol=props.symbol,className=props.className,title=props.title,titleId=props.titleId,maskId=props.maskId,iconLookup=normalizeIconArgs(iconArgs),classes=objectWithKey("classes",[].concat(_toConsumableArray(function classList(props){var _classes,beat=props.beat,fade=props.fade,beatFade=props.beatFade,bounce=props.bounce,shake=props.shake,flash=props.flash,spin=props.spin,spinPulse=props.spinPulse,spinReverse=props.spinReverse,pulse=props.pulse,fixedWidth=props.fixedWidth,inverse=props.inverse,border=props.border,listItem=props.listItem,flip=props.flip,size=props.size,rotation=props.rotation,pull=props.pull,classes=(_defineProperty(_classes={"fa-beat":beat,"fa-fade":fade,"fa-beat-fade":beatFade,"fa-bounce":bounce,"fa-shake":shake,"fa-flash":flash,"fa-spin":spin,"fa-spin-reverse":spinReverse,"fa-spin-pulse":spinPulse,"fa-pulse":pulse,"fa-fw":fixedWidth,"fa-inverse":inverse,"fa-border":border,"fa-li":listItem,"fa-flip":!0===flip,"fa-flip-horizontal":"horizontal"===flip||"both"===flip,"fa-flip-vertical":"vertical"===flip||"both"===flip},"fa-".concat(size),null!=size),_defineProperty(_classes,"fa-rotate-".concat(rotation),null!=rotation&&0!==rotation),_defineProperty(_classes,"fa-pull-".concat(pull),null!=pull),_defineProperty(_classes,"fa-swap-opacity",props.swapOpacity),_classes);return Object.keys(classes).map((function(key){return classes[key]?key:null})).filter((function(key){return key}))}(props)),_toConsumableArray(className.split(" ")))),transform=objectWithKey("transform","string"==typeof props.transform?fontawesome_svg_core.Qc.transform(props.transform):props.transform),mask=objectWithKey("mask",normalizeIconArgs(maskArgs)),renderedIcon=(0,fontawesome_svg_core.qv)(iconLookup,_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({},classes),transform),mask),{},{symbol,title,titleId,maskId}));if(!renderedIcon)return function log(){var _console;!PRODUCTION&&console&&"function"==typeof console.error&&(_console=console).error.apply(_console,arguments)}("Could not find icon",iconLookup),null;var abstract=renderedIcon.abstract,extraProps={ref};return Object.keys(props).forEach((function(key){FontAwesomeIcon.defaultProps.hasOwnProperty(key)||(extraProps[key]=props[key])})),convertCurry(abstract[0],extraProps)}));FontAwesomeIcon.displayName="FontAwesomeIcon",FontAwesomeIcon.propTypes={beat:prop_types_default().bool,border:prop_types_default().bool,beatFade:prop_types_default().bool,bounce:prop_types_default().bool,className:prop_types_default().string,fade:prop_types_default().bool,flash:prop_types_default().bool,mask:prop_types_default().oneOfType([prop_types_default().object,prop_types_default().array,prop_types_default().string]),maskId:prop_types_default().string,fixedWidth:prop_types_default().bool,inverse:prop_types_default().bool,flip:prop_types_default().oneOf([!0,!1,"horizontal","vertical","both"]),icon:prop_types_default().oneOfType([prop_types_default().object,prop_types_default().array,prop_types_default().string]),listItem:prop_types_default().bool,pull:prop_types_default().oneOf(["right","left"]),pulse:prop_types_default().bool,rotation:prop_types_default().oneOf([0,90,180,270]),shake:prop_types_default().bool,size:prop_types_default().oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:prop_types_default().bool,spinPulse:prop_types_default().bool,spinReverse:prop_types_default().bool,symbol:prop_types_default().oneOfType([prop_types_default().bool,prop_types_default().string]),title:prop_types_default().string,titleId:prop_types_default().string,transform:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().object]),swapOpacity:prop_types_default().bool},FontAwesomeIcon.defaultProps={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1};var convertCurry=function convert(createElement,element){var extraProps=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof element)return element;var children=(element.children||[]).map((function(child){return convert(createElement,child)})),mixins=Object.keys(element.attributes||{}).reduce((function(acc,key){var val=element.attributes[key];switch(key){case"class":acc.attrs.className=val,delete element.attributes.class;break;case"style":acc.attrs.style=function styleToObject(style){return style.split(";").map((function(s){return s.trim()})).filter((function(s){return s})).reduce((function(acc,pair){var i=pair.indexOf(":"),prop=camelize(pair.slice(0,i)),value=pair.slice(i+1).trim();return prop.startsWith("webkit")?acc[function capitalize(val){return val.charAt(0).toUpperCase()+val.slice(1)}(prop)]=value:acc[prop]=value,acc}),{})}(val);break;default:0===key.indexOf("aria-")||0===key.indexOf("data-")?acc.attrs[key.toLowerCase()]=val:acc.attrs[camelize(key)]=val}return acc}),{attrs:{}}),_extraProps$style=extraProps.style,existingStyle=void 0===_extraProps$style?{}:_extraProps$style,remaining=_objectWithoutProperties(extraProps,_excluded);return mixins.attrs.style=_objectSpread2(_objectSpread2({},mixins.attrs.style),existingStyle),createElement.apply(void 0,[element.tag,_objectSpread2(_objectSpread2({},mixins.attrs),remaining)].concat(_toConsumableArray(children)))}.bind(null,react.createElement);const MultiStateButton_stories={component:MultiStateButton_MultiStateButton,title:"SyncComponents/MultiStateButton",argTypes:{}},BUTTON_OPTIONS={absent:{value:"absent",iconOrText:(0,jsx_runtime.jsx)(FontAwesomeIcon,{icon:"ban",fixedWidth:!0,size:"lg",style:{fontWeight:"bolder"}}),class:"btn btn-secondary"},present:{value:"present",iconOrText:(0,jsx_runtime.jsx)(FontAwesomeIcon,{icon:"check",fixedWidth:!0,size:"lg",style:{fontWeight:"bolder"}}),class:"btn btn-success"},excuse:{value:"excuse",iconOrText:(0,jsx_runtime.jsx)(FontAwesomeIcon,{icon:"hand",fixedWidth:!0,size:"lg",style:{fontWeight:"bolder"}}),class:"btn btn-info"},cancel:{value:"cancel",iconOrText:(0,jsx_runtime.jsx)(FontAwesomeIcon,{icon:"xmark",size:"lg"}),class:"btn btn-danger"}},NoLoopingButton=args=>(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{loop:!1,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args});NoLoopingButton.displayName="NoLoopingButton",NoLoopingButton.args={readonly:!1,disabled:!1,loop:!1};const RoundButton=args=>(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{round:!0,loop:!0,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args});RoundButton.displayName="RoundButton",RoundButton.args={readonly:!1,disabled:!1,round:!0,loop:!0};const LoopingButton=args=>(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{loop:!0,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args});LoopingButton.displayName="LoopingButton",LoopingButton.args={readonly:!1,disabled:!1,loop:!0};const ExternalChangeState=args=>{const ExampleApp=()=>{const[currentOption,setCurrentOption]=(0,react.useState)(null),[currentState,setCurrentState]=(0,react.useState)((()=>Object.keys(BUTTON_OPTIONS)[0]));let btn;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:args=>{if(btn.toggle){var option=btn.toggle();setCurrentOption(option)}},className:"mb-4 btn btn-primary d-flex ",children:"Toggle"}),(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{ref:n=>{btn=n},readonly:!0,onChange:(state,option)=>{console.log(state,option,"StateOption"),setCurrentOption(option),setCurrentState(state)},className:"mx-3 mb-3",round:!0,loop:!0,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args}),(0,jsx_runtime.jsxs)("label",{children:["Current Option: ",currentOption?.value]}),currentOption?.iconOrText,(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsxs)("label",{children:["Current State: ",currentState]})]})};return(0,jsx_runtime.jsx)(ExampleApp,{})};ExternalChangeState.displayName="ExternalChangeState",ExternalChangeState.args={disabled:!1};const ExternalControlledChangeState=args=>{const ExampleApp=()=>{const[currentOption,setCurrentOption]=(0,react.useState)((()=>{var keys=Object.keys(BUTTON_OPTIONS);return BUTTON_OPTIONS[keys[1]]})),[currentState,setCurrentState]=(0,react.useState)((()=>Object.keys(BUTTON_OPTIONS)[0]));let btn;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:args=>{if(btn.toggle){var option=btn.toggle();setCurrentOption(option)}},className:"mb-4 btn btn-primary d-flex ",children:"Toggle"}),(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{ref:n=>{btn=n},onChange:(state,option)=>((state,option)=>{console.log(state,option,"StateOption Controlled"),setCurrentOption(option),setCurrentState(state)})(state,option),selectedOption:currentOption,className:"mx-3 mb-3",round:!0,loop:!0,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args}),(0,jsx_runtime.jsxs)("label",{children:["Selected Option: ",currentOption?.value]}),currentOption?.iconOrText,(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsxs)("label",{children:["Current State: ",currentState]})]})};return(0,jsx_runtime.jsx)(ExampleApp,{})};ExternalControlledChangeState.displayName="ExternalControlledChangeState",ExternalControlledChangeState.args={readonly:!0,disabled:!1};const ExternalControlledInvisibleButon=args=>{const ExampleApp=()=>{const[currentOption,setCurrentOption]=(0,react.useState)((()=>{var keys=Object.keys(BUTTON_OPTIONS);return BUTTON_OPTIONS[keys[1]]})),[currentState,setCurrentState]=(0,react.useState)((()=>Object.keys(BUTTON_OPTIONS)[0]));let btn;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:args=>{if(btn.toggle){var option=btn.toggle();setCurrentOption(option)}},className:"mb-4 btn btn-primary d-flex ",children:"Toggle"}),(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{ref:n=>{btn=n},visible:!1,selectedOption:currentOption,loop:!0,round:1,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args}),(0,jsx_runtime.jsxs)("label",{children:["Selected Option: ",currentOption?.value]}),currentOption?.iconOrText,(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsxs)("label",{children:["Current State: ",currentState]})]})};return(0,jsx_runtime.jsx)(ExampleApp,{})};ExternalControlledInvisibleButon.displayName="ExternalControlledInvisibleButon",ExternalControlledInvisibleButon.args={readonly:!0,disabled:!1};const ControlledChangeState=args=>{const ExampleApp=()=>{const[currentOption,setCurrentOption]=(0,react.useState)((()=>{var keys=Object.keys(BUTTON_OPTIONS);return BUTTON_OPTIONS[keys[0]]})),[currentState,setCurrentState]=(0,react.useState)((()=>Object.keys(BUTTON_OPTIONS)[0]));return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(MultiStateButton_MultiStateButton,{onChange:(state,option)=>((state,option)=>{setCurrentOption(option),setCurrentState(state)})(state,option),selectedOption:currentOption,className:"mx-3 mb-3",round:!0,loop:!0,options:BUTTON_OPTIONS,"data-testId":"InputField-id",...args}),(0,jsx_runtime.jsxs)("label",{children:["Selected Option: ",currentOption?.value]}),currentOption?.iconOrText,(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsxs)("label",{children:["Current State: ",currentState]})]})};return(0,jsx_runtime.jsx)(ExampleApp,{})};ControlledChangeState.displayName="ControlledChangeState",ControlledChangeState.args={readonly:!1,disabled:!1,round:!0},NoLoopingButton.parameters={...NoLoopingButton.parameters,docs:{...NoLoopingButton.parameters?.docs,source:{originalSource:'args => <MultiStateButton loop={false} options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />',...NoLoopingButton.parameters?.docs?.source}}},RoundButton.parameters={...RoundButton.parameters,docs:{...RoundButton.parameters?.docs,source:{originalSource:'args => <MultiStateButton round={true} loop={true} options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />',...RoundButton.parameters?.docs?.source}}},LoopingButton.parameters={...LoopingButton.parameters,docs:{...LoopingButton.parameters?.docs,source:{originalSource:'args => <MultiStateButton loop={true} options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />',...LoopingButton.parameters?.docs?.source}}},ExternalChangeState.parameters={...ExternalChangeState.parameters,docs:{...ExternalChangeState.parameters?.docs,source:{originalSource:'(args): any => {\n  const ExampleApp = (): any => {\n    const [currentOption, setCurrentOption] = useState<MultiStateButtonOption>(null);\n    const [currentState, setCurrentState] = useState<string>(() => {\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return keys[0];\n    });\n    // const btn = React.useRef<MultiStateButtonElement | null>(null);\n    let btn: MultiStateButtonElement | null;\n    const handleChangeState = args => {\n      if (btn.toggle) {\n        // console.log("Change state working")\n        var option = btn.toggle();\n        setCurrentOption(option);\n      }\n    };\n    return <>\n        <button onClick={handleChangeState} className="mb-4 btn btn-primary d-flex ">Toggle \n        </button>\n        <MultiStateButton ref={n => {\n        btn = n;\n      }} readonly={true} onChange={(state, option) => {\n        console.log(state, option, "StateOption");\n        setCurrentOption(option);\n        setCurrentState(state);\n      }}\n      //ref={theRef}\n      className="mx-3 mb-3" round={true} loop options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />\n        <label>Current Option: {currentOption?.value}</label>\n        {currentOption?.iconOrText}\n        <br />\n        <label>Current State: {currentState}</label>\n      </>;\n  };\n  return <ExampleApp />;\n}',...ExternalChangeState.parameters?.docs?.source}}},ExternalControlledChangeState.parameters={...ExternalControlledChangeState.parameters,docs:{...ExternalControlledChangeState.parameters?.docs,source:{originalSource:'(args): any => {\n  const ExampleApp = (): any => {\n    const [currentOption, setCurrentOption] = useState<MultiStateButtonOption>(() => {\n      //var theOption = BUTTON_OPTIONS\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return BUTTON_OPTIONS[(keys[1] as keyof MultiStateButtonOptions)];\n      //return keys[0]\n    });\n    const [currentState, setCurrentState] = useState<string>(() => {\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return keys[0];\n    });\n    // const btn = React.useRef<MultiStateButtonElement | null>(null);\n    let btn: MultiStateButtonElement | null;\n    const handleChangeState = args => {\n      if (btn.toggle) {\n        // console.log("Change state working")\n        var option = btn.toggle();\n        setCurrentOption(option);\n      }\n    };\n    const handleChange = (state, option) => {\n      console.log(state, option, "StateOption Controlled");\n      setCurrentOption(option);\n      setCurrentState(state);\n    };\n    return <>\n        <button onClick={handleChangeState} className="mb-4 btn btn-primary d-flex ">Toggle \n        </button>\n        <MultiStateButton ref={n => {\n        btn = n;\n      }}\n      // readonly={true}\n      onChange={(state, option) => handleChange(state, option)} selectedOption={currentOption}\n      //ref={theRef}\n      className="mx-3 mb-3" round={true} loop={true} options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />\n        <label>Selected Option: {currentOption?.value}</label>\n        {currentOption?.iconOrText}\n        <br />\n        <label>Current State: {currentState}</label>\n      </>;\n  };\n  return <ExampleApp />;\n}',...ExternalControlledChangeState.parameters?.docs?.source}}},ExternalControlledInvisibleButon.parameters={...ExternalControlledInvisibleButon.parameters,docs:{...ExternalControlledInvisibleButon.parameters?.docs,source:{originalSource:'(args): any => {\n  const ExampleApp = (): any => {\n    const [currentOption, setCurrentOption] = useState<MultiStateButtonOption>(() => {\n      //var theOption = BUTTON_OPTIONS\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return BUTTON_OPTIONS[(keys[1] as keyof MultiStateButtonOptions)];\n      //return keys[0]\n    });\n    const [currentState, setCurrentState] = useState<string>(() => {\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return keys[0];\n    });\n    // const btn = React.useRef<MultiStateButtonElement | null>(null);\n    let btn: MultiStateButtonElement | null;\n    const handleChangeState = args => {\n      if (btn.toggle) {\n        var option = btn.toggle();\n        setCurrentOption(option);\n      }\n    };\n    return <>\n        <button onClick={handleChangeState} className="mb-4 btn btn-primary d-flex ">Toggle \n        </button>\n        <MultiStateButton ref={n => {\n        btn = n;\n      }} visible={false} selectedOption={currentOption} loop={true} round={+true} options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />\n        <label>Selected Option: {currentOption?.value}</label>\n        {currentOption?.iconOrText}\n        <br />\n        <label>Current State: {currentState}</label>\n      </>;\n  };\n  return <ExampleApp />;\n}',...ExternalControlledInvisibleButon.parameters?.docs?.source}}},ControlledChangeState.parameters={...ControlledChangeState.parameters,docs:{...ControlledChangeState.parameters?.docs,source:{originalSource:'(args): any => {\n  const ExampleApp = (): any => {\n    const [currentOption, setCurrentOption] = useState<MultiStateButtonOption>(() => {\n      //var theOption = BUTTON_OPTIONS\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return BUTTON_OPTIONS[(keys[0] as keyof MultiStateButtonOptions)];\n      //return keys[0]\n    });\n    const [currentState, setCurrentState] = useState<string>(() => {\n      var keys = Object.keys(BUTTON_OPTIONS);\n      return keys[0];\n    });\n\n    // const handleChangeState = (args) => {\n    //   if (btn.toggle) {\n    //     // console.log("Change state working")\n    //     var option = btn.toggle();\n    //     setCurrentOption(option)\n    //   } \n\n    // }\n\n    const handleChange = (state, option) => {\n      // console.log(state, option, "StateOption Controlled")\n      setCurrentOption(option);\n      setCurrentState(state);\n    };\n    return <>\n        <MultiStateButton onChange={(state, option) => handleChange(state, option)} selectedOption={currentOption} className="mx-3 mb-3" round={true} loop={true} options={BUTTON_OPTIONS} data-testId="InputField-id" {...args} />\n        <label>Selected Option: {currentOption?.value}</label>\n        {currentOption?.iconOrText}\n        <br />\n        <label>Current State: {currentState}</label>\n      </>;\n  };\n  return <ExampleApp />;\n}',...ControlledChangeState.parameters?.docs?.source}}};const __namedExportsOrder=["NoLoopingButton","RoundButton","LoopingButton","ExternalChangeState","ExternalControlledChangeState","ExternalControlledInvisibleButon","ControlledChangeState"];try{ExternalChangeState.displayName="ExternalChangeState",ExternalChangeState.__docgenInfo={description:"",displayName:"ExternalChangeState",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MultiStateButton/MultiStateButton.stories.tsx#ExternalChangeState"]={docgenInfo:ExternalChangeState.__docgenInfo,name:"ExternalChangeState",path:"src/components/MultiStateButton/MultiStateButton.stories.tsx#ExternalChangeState"})}catch(__react_docgen_typescript_loader_error){}try{ExternalControlledChangeState.displayName="ExternalControlledChangeState",ExternalControlledChangeState.__docgenInfo={description:"",displayName:"ExternalControlledChangeState",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MultiStateButton/MultiStateButton.stories.tsx#ExternalControlledChangeState"]={docgenInfo:ExternalControlledChangeState.__docgenInfo,name:"ExternalControlledChangeState",path:"src/components/MultiStateButton/MultiStateButton.stories.tsx#ExternalControlledChangeState"})}catch(__react_docgen_typescript_loader_error){}try{ExternalControlledInvisibleButon.displayName="ExternalControlledInvisibleButon",ExternalControlledInvisibleButon.__docgenInfo={description:"",displayName:"ExternalControlledInvisibleButon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MultiStateButton/MultiStateButton.stories.tsx#ExternalControlledInvisibleButon"]={docgenInfo:ExternalControlledInvisibleButon.__docgenInfo,name:"ExternalControlledInvisibleButon",path:"src/components/MultiStateButton/MultiStateButton.stories.tsx#ExternalControlledInvisibleButon"})}catch(__react_docgen_typescript_loader_error){}try{ControlledChangeState.displayName="ControlledChangeState",ControlledChangeState.__docgenInfo={description:"",displayName:"ControlledChangeState",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MultiStateButton/MultiStateButton.stories.tsx#ControlledChangeState"]={docgenInfo:ControlledChangeState.__docgenInfo,name:"ControlledChangeState",path:"src/components/MultiStateButton/MultiStateButton.stories.tsx#ControlledChangeState"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=components-MultiStateButton-MultiStateButton-stories.5206ef73.iframe.bundle.js.map