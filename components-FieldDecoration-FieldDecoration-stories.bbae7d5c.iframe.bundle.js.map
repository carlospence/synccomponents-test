{"version":3,"file":"components-FieldDecoration-FieldDecoration-stories.bbae7d5c.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA","sources":["webpack://@carlospence/synccomponents-test/./src/components/FieldDecoration/FieldDecoration.tsx"],"sourcesContent":["import React, { useState, cloneElement } from \"react\";\nimport { FieldDecorationProps } from \"./FieldDecoration.types\";\nimport styled from \"styled-components\";\n\nconst FieldDecorationRoot = styled.div.attrs(props => ({\n  className: \"react-simple-widget field-decoration \" + props.className\n}))`\n  &.has-focus {\n    .field-decoration-content-container {\n      border-color: var(--rsw-primary-color);\n\n      > label {\n        color: var(--rsw-primary-color);\n      }\n    }\n  }\n\n  &.disabled {\n    opacity: 0.5;\n    pointer-events: none;\n\n    * {\n      pointer-events: none;\n    }\n  }\n\n  .field-decoration-content-container {\n    --border-width: 2px;\n\n    position: relative;\n    border-radius: 4px;\n    border: var(--border-width) solid var(--rsw-secondary-color);\n    padding: 8px 8px 4px;\n\n    > label {\n      position: absolute;\n      top: -10px;\n      left: 6px;\n      margin: 0;\n      padding: 0 4px;\n      font-size: 75%;\n      color: var(--rsw-label-color);\n      background-color: white;\n    }\n\n    > .field-decoration-content {\n      display: flex;\n      align-items: center;\n\n      > :not(.leading):not(.trailing) {\n        flex: 1 1;\n        width: 100%;\n        outline: none;\n        border: none;\n      }\n    }\n  }\n\n  > .field-decoration-footer {\n    display: flex;\n    padding: 0 10px;\n    justify-content: flex-end;\n\n    .helper,\n    .error {\n      margin: 0;\n      font-size: 75%;\n    }\n\n    .error {\n      color: var(--rsw-error-color);\n      flex: 1 1;\n    }\n  }\n`;\n\nexport const FieldDecoration = ({\n  label,\n  leading,\n  trailing,\n  error,\n  helper,\n  disabled,\n  children,\n  className,\n  ...rest\n}: FieldDecorationProps) => {\n  const [focused, setFocused] = useState(false);\n\n  const additionalClassNames = (): string => {\n    const classes = [];\n\n    if (className) classes.push(className);\n    if (leading) classes.push(\"has-leading\");\n    if (trailing) classes.push(\"has-trailing\");\n    if (focused) classes.push(\"has-focus\");\n    if (error) classes.push(\"has-error\");\n    if (helper) classes.push(\"has-helper\");\n    if (disabled) classes.push(\"disabled\");\n\n    return classes.join(\" \");\n  };\n\n  const child = children({\n    onFieldFocus: (): void => setFocused(true),\n    onFieldBlur: (): void => setFocused(false)\n  });\n\n  return (\n    <FieldDecorationRoot className={additionalClassNames()} {...rest}>\n      <div className=\"field-decoration-content-container\">\n        {label && <label>{label}</label>}\n\n        <div className=\"field-decoration-content\">\n          {leading &&\n            cloneElement(leading, {\n              className: `leading ${leading.props.className || \"\"}`,\n              disabled: disabled || leading.props.disabled\n            })}\n\n          {cloneElement(child, { disabled: disabled || child.props.disabled })}\n\n          {trailing &&\n            cloneElement(trailing, {\n              className: `leading ${trailing.props.className || \"\"}`,\n              disabled: disabled || trailing.props.disabled\n            })}\n        </div>\n      </div>\n\n      {(error || helper) && (\n        <div className=\"field-decoration-footer\">\n          {error && <div className=\"error\">{error}</div>}\n          {helper && <div className=\"helper\">{helper}</div>}\n        </div>\n      )}\n    </FieldDecorationRoot>\n  );\n};\n"],"names":[],"sourceRoot":""}